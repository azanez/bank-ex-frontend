PROYECTO BANCO
Especificación del cliente (banco):
«Deseamos que el sistema permita que nuestros usuarios accedan a dos servicios principales: la gestión de sus cuentas de ahorro y la realización de transacciones entre cuentas»>.


Task 0.0.1: Diseñar el diagrama de despliegue y el diagrama de componentes. [team]
Task 0.0.2: Diseñar el modelo de la base de datos. [backend]
Task 0.0.3: Construir base de datos en PostgreSQL. [backend]
Task 0.0.4: Desplegar la base de datos en Heroku. [leader]


EPICS
Epic 1: Gestionar módulo de cuenta de ahorros 16 User Story 1.1: Yo como cliente del banco, quiero gestionar mi cuenta de ahorros, para saber su saldo actual y consignar dinero.
Task 1.1.1: Construir un servicio web para consultar el saldo actual de una cuenta. [backend]
Task 1.1.2: Construir un servicio web para realizar la consignación de dinero en una cuenta. [backend]
Task 1.1.3: Diseñar los mockups correspondientes a las UI del estado actual de la cuenta y la consignación de dinero. [frontend]
Task 1.1.4: Construir una UI para mostrar el estado actual de la cuenta al usuario. [frontend]
Task 1.1.5: Construir una UI para con un formulario para consignar dinero en la cuenta del usuario. [frontend]
Task 1.1.6: Diseñar casos de prueba tanto para los servicios web de consulta de salgo y consignación de dinero. [QA]
Task 1.1.7: Llevar a cabo los casos de prueba para los servicios web de consulta de salgo y consignación de dinero utilizando PostMan. [QA]
Task 1.1.8: Diseñar casos de prueba tanto para la utilización de las UI relacionadas con consulta de salgo y consignación de dinero. [QA]
Task 1.1.9: Llevar a cabo casos de prueba para las UI relacionadas con consulta de salgo y consignación de dinero. [QA]
Task 1.1.10: Desplegar los servicips web de consulta de salgo y consignación de dinero en el backend de producción usando Heroku. [leader]
Task 1.1.11: Desplegar las UI relacionadas con consulta de salgo y consignación de dinero en el frontend de producción usando Heroku. [leader]


Epic 2: Construir el módulo de transferencias electrónicas
User Story 2.1: Yo como cliente del banco quiero realizar transferencias electrónicas, para gestionar mis pagos a otros clientes del banco.
Task 2.1.1: Construir un servicio web para traer la lista de clientes del banco. [backend]
Task 2.1.2: Construir un servicio web para registrar una transferencia electrónica de un cliente del banco. [backend]
Task 2.1.3: Diseñar un mockup para el formulario de transferencia electrónica. [frontend]
Task 2.1.4: Construir una UI para realizar una transferencia eléctronica entre cuentas del banco. [frontend]
Task 2.1.5: Diseñar los casos de prueba para los servicios web de lista de clientes y registro de transferencia electrónica. [QA]
Task 2.1.6: Llevar a cabo los casos de prueba para los servicios web de lista clientes y registro de transferencia electrónica. [QA]
Task 2.1.7: Diseñar los casos de prueba para la UI relacionada con el registro de transferencia electrónica. [QA]
Task 2.1.8: Llevar a cabo los casos de prueba para la UI relacionada con el registro de transferencia electrónica. (QA)
Task 2.1.9: Desplegar los servicios web de lista de clientes y registro de transferencia electrónica en el backend de producción usando Heroku. [leader]
Task 2.1.10: Desplegar la UI relacionada con el registro de transferencia electrónica en el frontend de producción usando Heroku. [leader]

User Story 2.2: Yo como cliente del banco, quiero ver y descargar el historial de mis transferencias electrónicas, para determinar el total de pagos y verificar que no me roben dinero. [descarga en formato excel]
Task 2.2.1: Construir un servicio web para traer el historial de transferencias de un cliente del banco. [backend]
Task 2.2.2: Construir un servicio web para traer la información de las transferencias menor valor y de mayor valor realizadas por un cliente del banco. [backend]
Task 2.2.3: Construir un servicio web para traer la cuenta a las cual un cliente del banco ha hecho más transferencias. [backend]
Task 2.2.4: Diseñar un mockup para un tablero de indicadores donde se muestren las transferencias históricas de un cliente, incluyendo las transacciones de menor y mayor valor, y la cuenta a la cual se transfiere con más frecuencia. [frontend]
Task 2.2.5: Construir una UI para generar un tablero de indicadores donde se muestren las transferencias históricas de un cliente, incluyendo las transacciones de menor y mayor valor, y la cuenta a la cual se transfiere con más frecuencia. [frontend]
...
...
...